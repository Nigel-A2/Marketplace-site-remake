{"version":3,"file":"index.js","mappings":"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","sources":["webpack://05-recipe-card-esnext/external window [\"wp\",\"components\"]","webpack://05-recipe-card-esnext/external window [\"wp\",\"coreData\"]","webpack://05-recipe-card-esnext/external window [\"wp\",\"data\"]","webpack://05-recipe-card-esnext/external window [\"wp\",\"element\"]","webpack://05-recipe-card-esnext/external window [\"wp\",\"htmlEntities\"]","webpack://05-recipe-card-esnext/external window [\"wp\",\"notices\"]","webpack://05-recipe-card-esnext/webpack/bootstrap","webpack://05-recipe-card-esnext/webpack/runtime/compat get default export","webpack://05-recipe-card-esnext/webpack/runtime/define property getters","webpack://05-recipe-card-esnext/webpack/runtime/hasOwnProperty shorthand","webpack://05-recipe-card-esnext/webpack/runtime/make namespace object","webpack://05-recipe-card-esnext/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"htmlEntities\"];","module.exports = window[\"wp\"][\"notices\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { useSelect, useDispatch } from '@wordpress/data';\r\nimport { store as coreDataStore } from '@wordpress/core-data';\r\nimport { decodeEntities } from '@wordpress/html-entities';\r\nimport { useState, useEffect, render } from '@wordpress/element';\r\nimport { Button, TextControl, SearchControl, Spinner, Modal, SnackbarList } from '@wordpress/components';\r\nimport { store as noticesStore } from '@wordpress/notices';\r\n/*\r\n    This file gives the plugin the full range of CRUD (Create, Read, Update, Delete) operations for WordPress pages\r\n    inside the WordPress dashboard by adding a new section to it.\r\n\r\n    Main file as defined in package.json\r\n*/\r\n\r\n// create edit form\r\nexport function EditPageForm( { pageId, onCancel, onSaveFinished } ) {\r\n    const { page, lastError, isSaving, hasEdits } = useSelect(\r\n        ( select ) => ( {\r\n            page: select( coreDataStore ).getEditedEntityRecord( 'postType', 'page', pageId ),\r\n            lastError: select( coreDataStore ).getLastEntitySaveError( 'postType', 'page', pageId ),\r\n            isSaving: select( coreDataStore ).isSavingEntityRecord( 'postType', 'page', pageId ),\r\n            hasEdits: select( coreDataStore ).hasEditsForEntityRecord( 'postType', 'page', pageId ),\r\n        } ),\r\n        [ pageId ]\r\n    );\r\n \r\n    const { saveEditedEntityRecord, editEntityRecord } = useDispatch( coreDataStore );\r\n    const handleSave = async () => {\r\n        const savedRecord = await saveEditedEntityRecord( 'postType', 'page', pageId );\r\n        if ( savedRecord ) {\r\n            onSaveFinished();\r\n        }\r\n    };\r\n    const handleChange = ( title ) =>  editEntityRecord( 'postType', 'page', page.id, { title } );\r\n \r\n    return (\r\n        <PageForm\r\n            title={ page.title }\r\n            onChangeTitle={ handleChange }\r\n            hasEdits={ hasEdits }\r\n            lastError={ lastError }\r\n            isSaving={ isSaving }\r\n            onCancel={ onCancel }\r\n            onSave={ handleSave }\r\n        />\r\n    );\r\n}\r\n\r\n// Adds the UI for the edit form\r\nexport function PageForm( { title, onChangeTitle, hasEdits, lastError, isSaving, onCancel, onSave } ) {\r\n    return (\r\n        <div className=\"my-gutenberg-form\">\r\n            <TextControl\r\n                label=\"Page title:\"\r\n                value={ title }\r\n                onChange={ onChangeTitle }\r\n            />\r\n            { lastError ? (\r\n                <div className=\"form-error\">Error: { lastError.message }</div>\r\n            ) : (\r\n                false\r\n            ) }\r\n            <div className=\"form-buttons\">\r\n                <Button\r\n                    onClick={ onSave }\r\n                    variant=\"primary\"\r\n                    disabled={ !hasEdits || isSaving }\r\n                >\r\n                    { isSaving ? (\r\n                        <>\r\n                            <Spinner/>\r\n                            Saving\r\n                        </>\r\n                    ) : 'Save' }\r\n                </Button>\r\n                <Button\r\n                    onClick={ onCancel }\r\n                    variant=\"tertiary\"\r\n                    disabled={ isSaving }\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function VanillaReactForm({ initialTitle }) {\r\n    const [title, setTitle] = useState( initialTitle );\r\n    return (\r\n        <TextControl\r\n            value={ title }\r\n            onChange={ setTitle }\r\n        />\r\n    );\r\n}\r\n\r\n// grant the ability to create a new page with this plugin\r\nfunction CreatePageButton() {\r\n    const [isOpen, setOpen] = useState( false );\r\n    const openModal = () => setOpen( true );\r\n    const closeModal = () => setOpen( false );\r\n    return (\r\n        <>\r\n            <Button onClick={ openModal } variant=\"primary\">\r\n                Create a new Page\r\n            </Button>\r\n            { isOpen && (\r\n                <Modal onRequestClose={ closeModal } title=\"Create a new page\">\r\n                    <CreatePageForm\r\n                        onCancel={ closeModal }\r\n                        onSaveFinished={ closeModal }\r\n                    />\r\n                </Modal>\r\n            ) }\r\n        </>\r\n    );\r\n}\r\n \r\nexport function CreatePageForm( { onCancel, onSaveFinished } ) {\r\n    const [title, setTitle] = useState();\r\n    const handleChange = ( title ) => setTitle( title );\r\n    const { saveEntityRecord } = useDispatch( coreDataStore );\r\n    const { lastError, isSaving } = useSelect(\r\n        ( select ) => ( {\r\n            // Notice the missing pageId argument:\r\n            lastError: select( coreDataStore )\r\n                .getLastEntitySaveError( 'postType', 'page' ),\r\n            // Notice the missing pageId argument\r\n            isSaving: select( coreDataStore )\r\n                .isSavingEntityRecord( 'postType', 'page' ),\r\n        } ),\r\n        []\r\n    );\r\n    const handleSave = async () => {\r\n        const savedRecord = await saveEntityRecord(\r\n            'postType',\r\n            'page',\r\n            { title, status: 'publish' }\r\n        );\r\n        if ( savedRecord ) {\r\n            onSaveFinished();\r\n        }\r\n    };\r\n    return (\r\n        <PageForm\r\n            title={ title }\r\n            onChangeTitle={ setTitle }\r\n            hasEdits={ !!title }\r\n            onSave={ handleSave }\r\n            onCancel={ onCancel }\r\n            lastError={ lastError }\r\n            isSaving={ isSaving }\r\n        />\r\n    );\r\n}\r\n\r\nfunction PageEditButton({ pageId }) {\r\n    const [ isOpen, setOpen ] = useState( false );\r\n    const openModal = () => setOpen( true );\r\n    const closeModal = () => setOpen( false );\r\n    return (\r\n        <>\r\n            <Button onClick={ openModal } variant=\"primary\">\r\n                Edit\r\n            </Button>\r\n            { isOpen && (\r\n                <Modal onRequestClose={ closeModal } title=\"Edit page\">\r\n                    <EditPageForm\r\n                        pageId={ pageId }\r\n                        onCancel={ closeModal }\r\n                        onSaveFinished={ closeModal }\r\n                    />\r\n                </Modal>\r\n            ) }\r\n        </>\r\n    );\r\n}\r\n\r\n// Adds the searchbar, and page list\r\nfunction MyFirstApp() {\r\n    const [ searchTerm, setSearchTerm ] = useState( '' );\r\n    const { pages, hasResolved } = useSelect(\r\n        ( select ) => {\r\n            const query = {};\r\n            if ( searchTerm ) {\r\n                query.search = searchTerm;\r\n            }\r\n            const selectorArgs = [ 'postType', 'page', query ];\r\n            return {\r\n                pages: select( coreDataStore ).getEntityRecords(\r\n                    ...selectorArgs\r\n                ),\r\n                hasResolved: select( coreDataStore ).hasFinishedResolution(\r\n                    'getEntityRecords',\r\n                    selectorArgs\r\n                ),\r\n            };\r\n        },\r\n        [ searchTerm ]\r\n    );\r\n  \r\n    return (\r\n        <div>\r\n            <div className=\"list-controls\">\r\n                <SearchControl onChange={ setSearchTerm } value={ searchTerm }/>\r\n                <CreatePageButton/>\r\n            </div>\r\n            <PagesList hasResolved={ hasResolved } pages={ pages }/>\r\n            <Notifications />\r\n        </div>\r\n    );\r\n}\r\n\r\nwindow.addEventListener(\r\n    'load',\r\n    function () {\r\n        render(\r\n            <MyFirstApp />,\r\n            document.querySelector( '#my-first-gutenberg-app' )\r\n        );\r\n    },\r\n    false\r\n);\r\n\r\n// adds the notification system\r\nfunction Notifications() {\r\n    const notices = useSelect(\r\n        ( select ) => select( noticesStore ).getNotices(),\r\n        []\r\n    );\r\n    const { removeNotice } = useDispatch( noticesStore );\r\n    const snackbarNotices = notices.filter( ({ type }) => type === 'snackbar' );\r\n \r\n    return (\r\n        <SnackbarList\r\n            notices={ snackbarNotices }\r\n            className=\"components-editor-notices__snackbar\"\r\n            onRemove={ removeNotice }\r\n        />\r\n    );\r\n}\r\n\r\n// adds a delete button to the pages list\r\nfunction DeletePageButton ({ pageId }) {\r\n    const { deleteEntityRecord } = useDispatch( coreDataStore );\r\n    const { createSuccessNotice, createErrorNotice } = useDispatch( noticesStore );\r\n    // useSelect returns a list of selectors if you pass the store handle\r\n    // instead of a callback:\r\n    const { getLastEntityDeleteError } = useSelect( coreDataStore )\r\n \r\n    const handleDelete = async () => {\r\n        const success = await deleteEntityRecord( 'postType', 'page', pageId);\r\n        if ( success ) {\r\n            // Tell the user the delete succeeded\r\n            createSuccessNotice( \"The page was deleted!\", {\r\n                type: 'snackbar',\r\n            } );\r\n        } else {\r\n            // We use the selector directly to get the fresh error *after* the deleteEntityRecord\r\n            // have failed.\r\n            const lastError = getLastEntityDeleteError( 'postType', 'page', pageId );\r\n            const message = ( lastError?.message || 'There was an error.' ) + ' Please refresh the page and try again.'\r\n            // Tell the user how exactly the delete has failed\r\n            createErrorNotice( message, {\r\n                type: 'snackbar',\r\n            } );\r\n        }\r\n    }\r\n    const { isDeleting } = useSelect(\r\n        select => ({\r\n            isDeleting: select( coreDataStore ).isDeletingEntityRecord( 'postType', 'page', pageId ),\r\n        }),\r\n        [ pageId ]\r\n    )\r\n    \r\n    return (\r\n        <Button variant=\"primary\" onClick={ handleDelete } disabled={ isDeleting }>\r\n            { isDeleting ? (\r\n                <>\r\n                    <Spinner />\r\n                    Deleting...\r\n                </>\r\n            ) : 'Delete' }\r\n        </Button>\r\n    );\r\n}\r\n\r\n// loads the list of pages\r\nfunction PagesList( { hasResolved, pages } ) {\r\n    if ( !hasResolved ) {\r\n        return <Spinner/>\r\n    }\r\n    if ( !pages?.length ) {\r\n        return <div>No results</div>\r\n    }\r\n    return (\r\n        <table className=\"wp-list-table widefat fixed striped table-view-list\">\r\n            <thead>\r\n                <tr>\r\n                    <td>Title</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                { pages?.map( ( page ) => (\r\n                    <tr key={ page.id }>\r\n                        <td>{ decodeEntities( page.title.rendered ) }</td>\r\n                        <td>\r\n                            <PageEditButton pageId={ page.id } />\r\n                            <DeletePageButton pageId={ page.id }/>\r\n                        </td>\r\n                    </tr>\r\n                ) ) }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n"],"names":["useSelect","useDispatch","store","coreDataStore","decodeEntities","useState","useEffect","render","Button","TextControl","SearchControl","Spinner","Modal","SnackbarList","noticesStore","EditPageForm","pageId","onCancel","onSaveFinished","page","lastError","isSaving","hasEdits","select","getEditedEntityRecord","getLastEntitySaveError","isSavingEntityRecord","hasEditsForEntityRecord","saveEditedEntityRecord","editEntityRecord","handleSave","savedRecord","handleChange","title","id","PageForm","onChangeTitle","onSave","message","VanillaReactForm","initialTitle","setTitle","CreatePageButton","isOpen","setOpen","openModal","closeModal","CreatePageForm","saveEntityRecord","status","PageEditButton","MyFirstApp","searchTerm","setSearchTerm","pages","hasResolved","query","search","selectorArgs","getEntityRecords","hasFinishedResolution","window","addEventListener","document","querySelector","Notifications","notices","getNotices","removeNotice","snackbarNotices","filter","type","DeletePageButton","deleteEntityRecord","createSuccessNotice","createErrorNotice","getLastEntityDeleteError","handleDelete","success","isDeleting","isDeletingEntityRecord","PagesList","length","map","rendered"],"sourceRoot":""}