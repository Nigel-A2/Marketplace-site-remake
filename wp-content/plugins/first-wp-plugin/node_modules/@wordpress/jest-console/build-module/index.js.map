{"version":3,"sources":["@wordpress/jest-console/src/index.js"],"names":["forEach","supportedMatchers","setConsoleMethodSpy","matcherName","methodName","spy","jest","spyOn","console","mockName","resetSpy","mockReset","assertionsNumber","assertExpectedCalls","mock","calls","length","expect","not","beforeAll","beforeEach","afterEach"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,QAAxB;AAEA;AACA;AACA;;AACA,OAAO,YAAP;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,mBAAmB,GAAG,CAAEC,WAAF,EAAeC,UAAf,KAA+B;AAC1D,QAAMC,GAAG,GAAGC,IAAI,CACdC,KADU,CACHC,OADG,EACMJ,UADN,EAEVK,QAFU,CAEC,WAAWL,UAAY,EAFxB,CAAZ;AAIA;AACD;AACA;;AACC,WAASM,QAAT,GAAoB;AACnBL,IAAAA,GAAG,CAACM,SAAJ;AACAN,IAAAA,GAAG,CAACO,gBAAJ,GAAuB,CAAvB;AACA;AAED;AACD;AACA;;;AACC,WAASC,mBAAT,GAA+B;AAC9B,QAAKR,GAAG,CAACO,gBAAJ,KAAyB,CAAzB,IAA8BP,GAAG,CAACS,IAAJ,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAA3D,EAA+D;AAC9DC,MAAAA,MAAM,CAAET,OAAF,CAAN,CAAkBU,GAAlB,CAAuBf,WAAvB;AACA;AACD;;AAEDgB,EAAAA,SAAS,CAAET,QAAF,CAAT;AAEAU,EAAAA,UAAU,CAAE,MAAM;AACjBP,IAAAA,mBAAmB;AACnBH,IAAAA,QAAQ;AACR,GAHS,CAAV;AAKAW,EAAAA,SAAS,CAAER,mBAAF,CAAT;AACA,CA9BD;;AAgCAb,OAAO,CAAEC,iBAAF,EAAqBC,mBAArB,CAAP","sourcesContent":["/**\n * External dependencies\n */\nimport { forEach } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport './matchers';\nimport supportedMatchers from './supported-matchers';\n\n/**\n * Sets spy on the console object's method to make it possible to fail test when method called without assertion.\n *\n * @param {string} matcherName Name of Jest matcher.\n * @param {string} methodName  Name of console method.\n */\nconst setConsoleMethodSpy = ( matcherName, methodName ) => {\n\tconst spy = jest\n\t\t.spyOn( console, methodName )\n\t\t.mockName( `console.${ methodName }` );\n\n\t/**\n\t * Resets the spy to its initial state.\n\t */\n\tfunction resetSpy() {\n\t\tspy.mockReset();\n\t\tspy.assertionsNumber = 0;\n\t}\n\n\t/**\n\t * Verifies that the spy has only been called if expected.\n\t */\n\tfunction assertExpectedCalls() {\n\t\tif ( spy.assertionsNumber === 0 && spy.mock.calls.length > 0 ) {\n\t\t\texpect( console ).not[ matcherName ]();\n\t\t}\n\t}\n\n\tbeforeAll( resetSpy );\n\n\tbeforeEach( () => {\n\t\tassertExpectedCalls();\n\t\tresetSpy();\n\t} );\n\n\tafterEach( assertExpectedCalls );\n};\n\nforEach( supportedMatchers, setConsoleMethodSpy );\n"]}